name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  testsuite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.4']

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl
          ini-values: apc.enable_cli = 1, zend.assertions = 1
          coverage: pcov

      - name: Composer install
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: "${{ matrix.composer-options }}"

      - name: Composer show
        run: composer show

      - name: Run PHPUnit
        run: |
          if [[ ${{ matrix.php-version }} == '8.4' ]]; then
            export XDEBUG_MODE=coverage
            vendor/bin/phpunit --display-warnings --display-incomplete --coverage-clover=coverage.xml
          else
            vendor/bin/phpunit --display-phpunit-deprecations --display-deprecations --display-warnings
          fi

      - name: Submit code coverage
        if: matrix.php-version == '8.4'
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml,coverage-functions.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  testsuite-windows:
    runs-on: windows-2022
    name: Windows - PHP 8.4

    env:
      EXTENSIONS: mbstring, intl
      PHP_VERSION: '8.4'

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get date part for cache key
        id: key-date
        run: echo "date=$(date +'%Y-%m')" >> $env:GITHUB_OUTPUT

      - name: Setup PHP extensions cache
        id: php-ext-cache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.EXTENSIONS }}
          key: ${{ steps.key-date.outputs.date }}

      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-ext-cache.outputs.dir }}
          key: ${{ runner.os }}-php-ext-${{ steps.php-ext-cache.outputs.key }}
          restore-keys: ${{ runner.os }}-php-ext-${{ steps.php-ext-cache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: apc.enable_cli = 1, zend.assertions = 1, extension = php_fileinfo.dll
          coverage: none

      - name: Composer install
        uses: ramsey/composer-install@v3

      - name: Run PHPUnit
        run: |
          vendor/bin/phpunit --display-incomplete

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-24.04

    env:
      PHIVE_KEYS: 'CF1A108D0E7AE720,51C67305FFC2E5C0,12CE0F1D262429A5'
      PHPSTAN_TESTS: 1

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, intl
          coverage: none
          tools: phive, cs2pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Composer install
        uses: ramsey/composer-install@v3

      - name: Install PHP tools with phive.
        run: 'phive install --trust-gpg-keys "$PHIVE_KEYS"'

      - name: Run phpcs
        if: always()
        run: vendor/bin/phpcs --report=checkstyle | cs2pr

      - name: Run psalm
        if: always()
        run: tools/psalm --output-format=github

      - name: Run phpstan
        if: always()
        run: vendor/bin/phpstan analyse --error-format=github

      - name: Run phpstan for tests
        if: env.PHPSTAN_TESTS
        run: vendor/bin/phpstan analyse -c tests/phpstan.neon --error-format=github

      - name: Run class deprecation aliasing validation script
        if: always()
        run: php contrib/validate-deprecation-aliases.php

      - name: Run composer.json validation for split packages
        if: always()
        run: php contrib/validate-split-packages.php

      - name: Run PHPStan for split packages
        if: always()
        run: php contrib/validate-split-packages-phpstan.php

      - name: Prefer lowest check
        if: matrix.prefer-lowest == 'prefer-lowest'
        run: composer require --dev dereuromark/composer-prefer-lowest && vendor/bin/validate-prefer-lowest -m
