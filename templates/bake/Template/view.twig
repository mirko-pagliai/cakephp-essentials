<?php
declare(strict_types=1);

/**
 * @uses \App\Controller\{{ pluralVar[0:1]|upper ~ pluralVar[1:] }}Controller::view()
 *
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar[0:1]|upper ~ singularVar[1:] }}
 */

{% if displayField == 'id' %}
$this->assignTitle(__('{{ singularHumanName }} #{0,number}', ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ displayField }}));
{% else %}
$this->assignTitle(h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ displayField }}));
{% endif %}

{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar[0:1]|upper ~ singularVar[1:] ~ '->' ~ primaryKey[0] %}
$this->startMainLinks();
echo $this->Html->link(
    title: __('List'),
    url: ['action' => 'index'],
    options: ['class' => 'btn btn-sm btn-outline-primary', 'icon' => $this->Html::INDEX_ICON]
);
echo $this->Html->link(
    title: __('Edit'),
    url: ['action' => 'edit', {{ pK|raw }}],
    options: ['class' => 'btn btn-sm btn-outline-primary', 'icon' => $this->Html::EDIT_ICON]
);
echo $this->Form->deleteLink(
    title: __('Delete'),
    url: ['action' => 'delete', {{ pK|raw }}],
    options: [
        'class' => 'btn btn-sm btn-outline-danger',
        'icon' => $this->Html::DELETE_ICON,
    ]
);
$this->end();
?>
{% set done = [] %}

<div class="{{ pluralVar }} view content">
    <table class="table">
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
{% if associationFields[field] is defined %}
{% set details = associationFields[field] %}
        <tr>
            <th><?= __('{{ details.property|humanize }}') ?></th>
            <td>
                <?php
                if (${{ singularVar[0:1]|upper ~ singularVar[1:] }}->hasValue('{{ details.property }}')) {
                    echo $this->Html->link(
                        title: ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }}->{{ details.displayField }},
                        url: ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }}->{{ details.primaryKey[0] }}]
                    );
                }
                ?>
            </td>
        </tr>
{% else %}
        <tr>
            <th><?= __('{{ field|humanize }}') ?></th>
            <td><?= h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
        </tr>
{% endif %}
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
        <tr>
            <th><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
            <td>
                <?php
                if (${{ singularVar[0:1]|upper ~ singularVar[1:] }}->hasValue('{{ details.property }}')) {
                    echo $this->Html->link(
                        title: ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }}->{{ details.displayField }},
                        url: ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }}->{{ details.primaryKey[0] }}]
                    );
                }
                ?>
            </td>
        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
        <tr>
            <th><?= __('{{ field|humanize }}') ?></th>
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.null %}
            <td><?= ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }} === null ? '' : $this->Number->format(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
{% else %}
            <td><?= $this->Number->format(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
{% endif %}
        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.enum %}
{% for field in groupedFields.enum %}
        <tr>
            <th><?= __('{{ field|humanize }}') ?></th>
{% set columnData = Bake.columnData(field, schema) %}
{% set supportsLabel = Bake.enumSupportsLabel(field, schema) %}
{% if columnData.null %}
            <td><?= ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }} === null ? '' : h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}->{% if supportsLabel %}label(){% else %}value{% endif %}) ?></td>
{% else %}
            <td><?= h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}->{% if supportsLabel %}label(){% else %}value{% endif %}) ?></td>
{% endif %}
        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
        <tr>
            <th><?= __('{{ field|humanize }}') ?></th>
            <td><?= h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
        <tr>
            <th><?= __('{{ field|humanize }}') ?></th>
            <td><?= ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }} ? __('Yes') : __('No'); ?></td>
        </tr>
{% endfor %}
{% endif %}
    </table>
{% if groupedFields.text %}
{% for field in groupedFields.text %}
    <div class="text">
        <strong><?= __('{{ field|humanize }}') ?></strong>
        <blockquote>
            <?= $this->Text->autoParagraph(h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }})); ?>
        </blockquote>
    </div>
{% endfor %}
{% endif %}
{% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
{% for alias, details in relations %}
{% set otherSingularVar = alias|singularize|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}
    <div class="related">
        <h4><?= __('Related {{ otherPluralHumanName }}') ?></h4>
        <?php if (!empty(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }})) : ?>

        <div class="table-responsive">
            <table class="table">
                <tr>
{% for field in details.fields %}
                    <th><?= __('{{ field|humanize }}') ?></th>
{% endfor %}
                    <th></th>
                </tr>
                <?php foreach (${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }} as ${{ otherSingularVar[0:1]|upper ~ otherSingularVar[1:] }}) : ?>
                <tr>
{% for field in details.fields %}
                    <td><?= h(${{ otherSingularVar[0:1]|upper ~ otherSingularVar[1:] }}->{{ field }}) ?></td>
{% endfor %}
{% set otherPk = '$' ~ otherSingularVar[0:1]|upper ~ otherSingularVar[1:] ~ '->' ~ details.primaryKey[0] %}
                    <td class="actions">
                        <?php
                        echo $this->Html->link(
                            title: __('View'),
                            url: ['controller' => '{{ details.controller }}', 'action' => 'view', {{ otherPk|raw }}],
                            options: ['icon' => $this->Html::VIEW_ICON']
                        );
                        echo $this->Html->link(
                            title: __('Edit'),
                            url: ['controller' => '{{ details.controller }}', 'action' => 'edit', {{ otherPk|raw }}],
                            options: ['icon' => $this->Html::EDIT_ICON]
                        );
                        echo $this->Form->deleteLink(
                            title: __('Delete'),
                            url: ['controller' => '{{ details.controller }}', 'action' => 'delete', {{ otherPk|raw }}],
                            options: ['class' => 'link-danger', 'icon' => $this->Html::DELETE_ICON]
                        );
                        ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </table>
        </div>
        <?php endif; ?>
    </div>
{% endfor %}
</div>
