<?php
declare(strict_types=1);

/**
 * @uses \App\Controller\{{ pluralVar[0:1]|upper ~ pluralVar[1:] }}Controller::index()
 *
 * @var \{{ namespace }}\View\AppView $this
 * @var iterable<\{{ entityClass }}> ${{ pluralVar }}
 */
?>

<div class="{{ pluralVar }} index content">
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
    <?= $this->Html->link(
        title: __('New {{ singularHumanName }}'),
        url: ['action' => 'add'],
        options: ['class' => 'button float-right']
    ) ?>
{% set done = [] %}

    <h3><?= __('{{ pluralHumanName }}') ?></h3>

    <div class="table-responsive">
        <table>
            <thead>
                <tr>
{% for field in fields %}
                    <th><?= $this->Paginator->sort('{{ field }}') ?></th>
{% endfor %}
                    <th class="actions"><?= __('Actions') ?></th>
                </tr>
            </thead>
            <tbody>
                <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
                <tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo is defined %}
{% for alias, details in associations.BelongsTo %}
{% if field == details.foreignKey %}
{% set isKey = true %}
                    <td><?= ${{ singularVar }}->hasValue('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
{% endif %}
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% set supportsLabel = Bake.enumSupportsLabel(field, schema) %}
{% if columnData.type starts with 'enum-' %}
                    <td><?= ${{ singularVar }}->{{ field }} === null ? '' : h(${{ singularVar }}->{{ field }}->{% if supportsLabel %}label(){% else %}value{% endif %}) ?></td>
{% elseif columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                    <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% elseif columnData.null %}
                    <td><?= ${{ singularVar }}->{{ field }} === null ? '' : $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
                    <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
                    <td class="actions">
                        <?php
                        echo $this->Html->link(title: __('View'), url: ['action' => 'view', {{ pk|raw }}]);
                        echo $this->Html->link(title: __('Edit'), url: ['action' => 'edit', {{ pk|raw }}]);
                        echo $this->Form->postLink(
                            title: __('Delete'),
                            url: ['action' => 'delete', {{ pk|raw }}],
                            options: [
                                'method' => 'delete',
                                'confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }}),
                            ]
                        );
                        ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    </div>

    <div class="paginator">
        <ul class="pagination">
            <?= $this->Paginator->first('<< ' . __('First')) ?>
            <?= $this->Paginator->prev('< ' . __('Previous')) ?>
            <?= $this->Paginator->numbers() ?>
            <?= $this->Paginator->next(__('Next') . ' >') ?>
            <?= $this->Paginator->last(__('Last') . ' >>') ?>
        </ul>

        <p><?= $this->Paginator->counter(__('Page {{ '{{' }}page{{ '}}' }} of {{ '{{' }}pages{{ '}}' }}, showing {{ '{{' }}current{{ '}}' }} record(s) out of {{ '{{' }}count{{ '}}' }} total')) ?></p>
    </div>
</div>
