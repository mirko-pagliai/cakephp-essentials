<?php
declare(strict_types=1);

/**
 * @uses \App\Controller\{{ pluralVar[0:1]|upper ~ pluralVar[1:] }}Controller::index()
 *
 * @var \{{ namespace }}\View\AppView $this
 * @var iterable<\{{ entityClass }}> ${{ pluralVar }}
 */
?>

<div class="{{ pluralVar }} index content">
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
    <div class="float-end">
        <?= $this->Html->link(
            title: __('Add'),
            url: ['action' => 'add'],
            options: [
                'class' => 'button',
                'icon' => 'plus',
            ]
        ) ?>
    </div>
{% set done = [] %}

    <h3><?= __('{{ pluralHumanName }}') ?></h3>

    <table class="table">
        <thead>
            <tr>
{% for field in fields %}
                <th><?= $this->Paginator->sort('{{ field }}') ?></th>
{% endfor %}
                <th></th>
            </tr>
        </thead>
        <tbody>
            <?php foreach (${{ pluralVar }} as ${{ singularVar[0:1]|upper ~ singularVar[1:] }}): ?>
            <tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo is defined %}
{% for alias, details in associations.BelongsTo %}
{% if field == details.foreignKey %}
{% set isKey = true %}
                <td>
                    <?php
                    if (${{ singularVar[0:1]|upper ~ singularVar[1:] }}->hasValue('{{ details.property }}')) {
                        echo $this->Html->link(
                            title: ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }}->{{ details.displayField }},
                            url: ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ details.property }}->{{ details.primaryKey[0] }}]
                        );
                    }
                    ?>
                </td>
{% endif %}
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% set supportsLabel = Bake.enumSupportsLabel(field, schema) %}
{% if columnData.type starts with 'enum-' %}
                <td>
                    <?= ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }} === null ? '' : h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}->{% if supportsLabel %}label(){% else %}value{% endif %}) ?>
                </td>
{% elseif field == 'id' %}
                <td>
                    <code class="fw-bolder">#<?= ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }} ?></code>
                </td>
{% elseif columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                <td><?= h(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
{% elseif columnData.null %}
                <td><?= ${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }} === null ? '' : $this->Number->format(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
{% else %}
                <td><?= $this->Number->format(${{ singularVar[0:1]|upper ~ singularVar[1:] }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar[0:1]|upper ~ singularVar[1:] ~ '->' ~ primaryKey[0] %}
                <td class="hstack gap-2">
                    <?php
                    echo $this->Html->link(
                        title: __('View'),
                        url: ['action' => 'view', {{ pk|raw }}],
                        options: ['icon' => 'eye']
                    );
                    echo $this->Html->link(
                        title: __('Edit'),
                        url: ['action' => 'edit', {{ pk|raw }}],
                        options: ['icon' => 'edit']
                    );
                    echo $this->Form->postLink(
                        title: __('Delete'),
                        url: ['action' => 'delete', {{ pk|raw }}],
                        options: [
                            'confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }}),
                            'class' => 'link-danger',
                            'icon' => 'trash',
                            'method' => 'delete',
                        ]
                    );
                    ?>
                </td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>

    <div class="paginator">
        <ul class="pagination">
            <?= $this->Paginator->first('<< ' . __('First')) ?>
            <?= $this->Paginator->prev('< ' . __('Previous')) ?>
            <?= $this->Paginator->numbers() ?>
            <?= $this->Paginator->next(__('Next') . ' >') ?>
            <?= $this->Paginator->last(__('Last') . ' >>') ?>
        </ul>

        <p><?= $this->Paginator->counter(__('Page {{ '{{' }}page{{ '}}' }} of {{ '{{' }}pages{{ '}}' }}, showing {{ '{{' }}current{{ '}}' }} record(s) out of {{ '{{' }}count{{ '}}' }} total')) ?></p>
    </div>
</div>
