{% set compact = ["'#{singularName|capitalize}'"] %}
    /**
     * Add method.
     *
     * @return \Cake\Http\Response|null|void Redirects on success, otherwise renders
     */
    public function add()
    {
        ${{ singularName|capitalize }} = $this->{{ currentModelName }}->newEmptyEntity();

{% if Bake.hasPlugin('Authorization') %}
        $this->Authorization->authorize(${{ singularName|capitalize }});
{% endif %}
        if ($this->request->is('post')) {
            ${{ singularName|capitalize }} = $this->{{ currentModelName }}->patchEntity(${{ singularName|capitalize }}, $this->request->getData());
            if ($this->{{ currentModelName }}->save(${{ singularName|capitalize }})) {
                $this->Flash->success(__('The {{ singularHumanName|lower }} has been saved'));

                return $this->redirect(['action' => 'index']);
            }

            $this->Flash->error(__('The {{ singularHumanName|lower }} could not be saved. Please, try again'));
        }
{% set associations = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% set associations = associations|merge(Bake.aliasExtractor(modelObj, 'BelongsToMany')) %}

{%- for assoc in associations %}
    {%- set otherName = Bake.getAssociatedTableAlias(modelObj, assoc) %}
    {%- set otherPlural = otherName|variable %}
        ${{ otherPlural }} = $this->{{ currentModelName }}->{{ otherName }}->find('list', limit: 200)->all();
        {{- "\n" }}
    {%- set compact = compact|merge(["'#{otherPlural}'"]) %}
{% endfor %}

        $this->set(compact({{ compact|join(', ')|raw }}));
    }
