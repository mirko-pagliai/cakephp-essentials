{% set allAssociations = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% set allAssociations = allAssociations|merge(Bake.aliasExtractor(modelObj, 'BelongsToMany')) %}
{% set allAssociations = allAssociations|merge(Bake.aliasExtractor(modelObj, 'HasOne')) %}
{% set allAssociations = allAssociations|merge(Bake.aliasExtractor(modelObj, 'HasMany')) %}
    /**
     * View method.
     *
     * @param int $id
     * @return void
     * @throws \Cake\Datasource\Exception\RecordNotFoundException
     * @link templates/{{ currentModelName }}/view.php
     */
    public function view(int $id): void
    {
        ${{ singularName[0:1]|upper ~ singularName[1:] }} = $this->{{ currentModelName }}->get(primaryKey: $id, contain: {{ Bake.exportArray(allAssociations)|raw }});

{% if Bake.hasPlugin('Authorization') %}
        $this->Authorization->authorize(${{ singularName[0:1]|upper ~ singularName[1:] }});

{% endif %}
        $this->set(compact('{{ singularName[0:1]|upper ~ singularName[1:] }}'));
    }
